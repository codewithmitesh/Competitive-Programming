
/* Code By Mitesh Tank (codewithmitesh) :- www.linkedin.com/in/mitesh-tank , https://github.com/codewithmitesh , https://www.codechef.com/users/codewithmitesh   */

#include <bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define fo(i, n) for (i = 0; i < n; i++)
#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)
#define int long long
#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define ss(s) scanf("%s", s)
#define pi(x) printf("%d\n", x)
#define pl(x) printf("%lld\n", x)
#define ps(s) printf("%s\n", s)
#define deb(x) cout << #x << "=" << x << endl
#define deb2(x, y) cout << #x << "=" << x << "," << #y << "=" << y << endl

mt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());
int rng(int lim)
{
    uniform_int_distribution<int> uid(0, lim - 1);
    return uid(rang);
}
const int mod = 1'000'000'007;
const int N = 1e6;
int i, j, n, m, Tsum, res;
int arr[N], front[N], Back[N];
void gcd_Calculator(int n)
{
    front[1] = arr[1], Back[n] == arr[n];
    for (int i = 2; i < n + 1; i++)
    {
        front[i] = __gcd(front[i - 1], arr[i]);
        /* code */
    }
    for (int i = n - 1; i > 0; i--)
    {
        Back[i] = __gcd(Back[i + 1], arr[i]);

        /* code */
    }
}



int32_t main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    srand(chrono::high_resolution_clock::now().time_since_epoch().count());

    int T = 1;
    cin >> T;
    while (T--)
    {
        cin >> n;
    Tsum = 0;
    res = 0;

    for (int i = 1; i < n+1; i++)
    {
        cin >> arr[i];

        /* code */
    }
    sort(arr, arr + n + 1);
    gcd_Calculator(n);
    for (int i = 1; i < n + 1; i++)
    {
        Tsum += arr[i];
    }
    int min = LLONG_MAX;
    for (int i = 1; i < n + 1; i++)
    {

        res = (Tsum - arr[i] + __gcd(front[i - 1], Back[i + 1])) / __gcd(front[i - 1], Back[i + 1]);
        if (res < min)
            min = res;
    }
    cout << min<<endl;
    }
    return 0;
}
